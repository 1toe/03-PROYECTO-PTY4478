-- SQL script to populate Unimarc product data;
-- Generated by populate_sql.py from json_combinado_20250520_223842.json;
-- Target Schema: public;
-- Note: This script generates PostgreSQL syntax for ON CONFLICT (upsert).;
-- If using MySQL, you would need to replace INSERT ... ON CONFLICT DO ... with INSERT IGNORE INTO ... or REPLACE INTO ...;
;
BEGIN;
-- --- Lookup Tables ---;
-- Brands;
-- Categories;
-- Ingredient/Allergen/Trace Names;
-- Note: Assumes ingredient_name is unique globally for ON CONFLICT.;
-- Nutritional Info Types;
-- Note: Nutritional type hierarchy is not inserted here. Lookup relies on name.;
-- Assumes 'name' is unique globally for ON CONFLICT.;
-- Certification Types;
-- Certifiers;
-- Note: Handles ON CONFLICT for certifiers with non-NULL names. Certifiers with NULL names are inserted directly (allowing duplicates if the same NULL-named certifier appears multiple times with different json_ids/logos, or if a certifier gets a name later).;
-- Certification Degrees;
-- Countries;
-- --- Product Specific Data (INSERT ON CONFLICT DO UPDATE / DELETE + INSERT) ---;
-- Note: These inserts/updates rely on lookup tables populated above.;
-- They use subqueries to find IDs based on names/codes.;
-- Inserts for list/link tables (images, ingredients, etc.) are done with DELETE + INSERT for simplicity.;
COMMIT;
